{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/MyRoutes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Junior","JuniorPlus","Message","props","className","s","message","src","avatar","alt","angle","content","name","text","time","messageData","HW1","Affair","priority","affair","clsName","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","someClass","changeFilter","defaultAffairs","v1","HW2","useState","affairs","setAffairs","filter","setFilter","filteredAffairs","filterAffairs","deleteAffair","Greeting","inputClass","error","length","sendWithEnter","addUserCallBack","type","value","onChange","e","setNameCallback","currentTarget","onKeyPress","charCode","disabled","totalUsers","GreetingContainer","users","addUserCallback","setName","setError","title","trim","alert","HW3","setUsers","console","log","user","newUser","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","PATH","MyRoutes","path","element","to","Header","headerLinks","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e1da1a58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2jg2R\",\"avatar\":\"Message_avatar__O69tM\",\"content\":\"Message_content__24bLy\",\"angle\":\"Message_angle__1tuRs\",\"text\":\"Message_text__1Ax_3\",\"name\":\"Message_name__CoKe_\",\"time\":\"Message_time__2Gowr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__gCIMD\",\"superInput\":\"SuperInputText_superInput__82hIh\",\"errorInput\":\"SuperInputText_errorInput__1khZH\",\"error\":\"SuperInputText_error__3FWj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2KKAY\",\"headerLinks\":\"App_headerLinks__24FEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3TDDZ\",\"red\":\"SuperButton_red__JNu6f\",\"button\":\"SuperButton_button__MBtlB\",\"blink\":\"SuperButton_blink__3p7qD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3l72s\",\"checkbox\":\"SuperCheckbox_checkbox__3Pmkl\",\"spanClassName\":\"SuperCheckbox_spanClassName__3q7GM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__mh-LS\",\"low\":\"Affair_low__4_Mxk\",\"high\":\"Affair_high__16ibk\",\"middle\":\"Affair_middle__3xaSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1fLZF\",\"column\":\"HW4_column__1P97m\",\"testSpanError\":\"HW4_testSpanError__3mjlK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1l-3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__11yQN\",\"error\":\"Greeting_error__3NOpL\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\n\r\nexport const Junior = () => {\r\n    return <div>\r\n        <h1>123123</h1>\r\n    </div>\r\n}","\r\n\r\nexport const JuniorPlus = () => {\r\n    return <div></div>\r\n}","import React from 'react'\r\nimport s from \"./Message.module.css\"\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} alt=\"avatar\" className={s.avatar}/>\r\n\r\n            <div className={s.angle}></div>\r\n\r\n            <div className={s.content}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some message',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\"\r\nimport s from './Affair.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: string) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    let priority = props.affair.priority\r\n    let clsName = s[priority]\r\n    /* or let clsName = s[props.affair.priority] */\r\n\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <label className={clsName}>{props.affair.name}</label>\r\n            <label className={clsName}>{props.affair.priority}</label>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    changeFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: string) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.changeFilter('all') // need to fix\r\n    const setHigh = () => props.changeFilter('high')\r\n    const setMiddle = () => props.changeFilter('middle')\r\n    const setLow = () => props.changeFilter('low')\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <div className={s.someClass}>\r\n\r\n\r\n                <button onClick={setAll}>All</button>\r\n                <button onClick={setHigh}>High</button>\r\n                <button onClick={setMiddle}>Middle</button>\r\n                <button onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport {v1} from 'uuid';\r\n\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n    _id: string\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\nconst defaultAffairs: Array<AffairType> /* or Affairs[] */ = [\r\n    {_id: v1(), name: 'React', priority: 'high'},\r\n    {_id: v1(), name: 'anime', priority: 'low'},\r\n    {_id: v1(), name: 'games', priority: 'low'},\r\n    {_id: v1(), name: 'work', priority: 'high'},\r\n    {_id: v1(), name: 'html & css', priority: 'middle'},\r\n]\r\n\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): AffairType[] => {\r\n    if(filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: string): AffairType[] => {\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: string) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    const changeFilter = (filter: FilterType) => {\r\n        setFilter(filter)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                changeFilter={changeFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (title: string) => void\r\n    addUserCallBack: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\nconst Greeting = (props: GreetingPropsType) => {\r\n    const inputClass = props.error.length ? s.error : ''\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setNameCallback(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            sendWithEnter()\r\n        }\r\n    }\r\n\r\n    const sendWithEnter = () => {\r\n        props.addUserCallBack()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"input\"\r\n                   value={props.name}\r\n                   onChange={onChangeHandler}\r\n                   className={inputClass}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <button disabled={!!props.error.length} onClick={sendWithEnter}>add</button>\r\n            <span>{props.totalUsers}</span>\r\n            <div>\r\n                <span className={inputClass}>{props.error}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n    totalUsers: number\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback, totalUsers}) => {\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (title: string) => {\r\n        if (title.trim() !== '') {\r\n            setName(title)\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError('Name is invalid')\r\n        }\r\n\r\n    }\r\n    const addUserCallBack = () => {\r\n        if (name.trim() !== '') {\r\n            alert(`Hello ${name} !`)\r\n            addUserCallback(name.trim())\r\n            setName('')\r\n            setError('')\r\n        } else {\r\n            setError('Name is invalid')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUserCallBack={addUserCallBack}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let user = {_id: v1(), name: name}\r\n        let newUser = [...users, user]\r\n\r\n        setUsers(newUser)\r\n    }\r\n    let totalUsers = users.length\r\n    console.log(users)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback} totalUsers={totalUsers}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)// сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport { Navigate, Routes } from 'react-router-dom'\r\nimport { Route } from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport { Junior } from './pages/Junior'\r\nimport { JuniorPlus } from './pages/JuniorPlus'\r\nimport PreJunior from './pages/PreJunior'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    // add paths\r\n}\r\n\r\nfunction MyRoutes() {\r\n    return (\r\n        <Routes>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} element={ <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                {/*// add routes*/}\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route element={<Error404/>}/>\r\n        </Routes>\r\n    )\r\n}\r\n\r\nexport default MyRoutes\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {PATH} from \"./MyRoutes\"\r\nimport s from './../../p1-main/m1-ui/u1-app/App.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.headerLinks}>\r\n            <button><Link to={PATH.PRE_JUNIOR}>Pre-Junior</Link></button>\r\n            <button><Link to={PATH.JUNIOR}>Junior</Link></button>\r\n            <button><Link to={PATH.JUNIOR_PLUS}>Junior-Plus</Link></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport MyRoutes from './MyRoutes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n\r\n            <Header/>\r\n\r\n            <MyRoutes/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter, HashRouter, Routes} from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}